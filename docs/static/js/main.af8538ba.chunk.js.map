{"version":3,"sources":["components/CategoryAdd.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","giphyUrl","GifGridItem","console","log","className","src","alt","href","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAMaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,8BACI,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,QAAU,GAC/BR,GAAc,SAAAS,GAAI,OACbP,GADa,mBACEO,QAQhB,SACI,uBAAOC,KAAK,OAAOC,MAAOT,EAAYU,SAhBzB,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,e,+BCTlBG,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,iKAEAC,MAFA,4FAEYF,GAFZ,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,IAClCG,SAAUN,EAAIG,QAVH,kBAeZL,GAfY,4CAAH,sDCEPS,EAAc,SAAC,GAAkC,IAAhCN,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,IAAKG,EAAe,EAAfA,SAE1C,OADAE,QAAQC,IAAI,UAAUP,EAAOD,EAAIE,EAAKG,GAElC,qBAAKI,UAAU,8DAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,qBAAKC,IAAKR,EAAKO,UAAU,eAAeE,IAAI,KACxC,sBAAKF,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BR,IAE5B,mBAAGW,KAAMP,EAAUI,UAAU,kBAA7B,mCCNXI,EAAU,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAEtB,ECJyB,SAACA,GAC1B,MAA0Bd,mBAAS,CAC/BmB,KAAM,GACNkB,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OAVAC,qBAAU,WACN3B,EAAQC,GAAU2B,MAAK,SAAAC,GAGfH,EAAS,CACLpB,KAAMuB,EACNL,SAAS,SAGtB,CAACvB,IACGwB,EDX0BK,CAAa7B,GAAjCY,EAAb,EAAQP,KAAakB,EAArB,EAAqBA,QAKrB,OACI,gCACI,oBAAIL,UAAU,+CAAd,SAA8DlB,IAC7DuB,EAAU,qBAAKL,UAAU,SAAf,wBAA2C,GACtD,qBAAKA,UAAU,MAAf,SAGIN,EAAOL,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAA+BA,GAAbA,EAAIC,aEf7BqB,EAAe,WACxB,MAAoC5C,mBAAS,CAAC,gBAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAIA,OACI,gCACI,oBAAIiC,UAAU,+CAAd,8BACA,cAAC,EAAD,CAAajC,cAAeA,IAC5B,uBAGI8C,EAAWxB,KAAI,SAAAP,GAAQ,OACnB,cAAC,EAAD,CAASA,SAAUA,GAAeA,U,wBCRtDgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.af8538ba.chunk.js","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport PropTypes from 'prop-types'\n// import { GifExpertApp } from '../GifExpertApp';\n// import {setCategories} from GifExpertApp;\n\nexport const CategoryAdd = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState('');\n    const handleInputText =  (e)=>{\n        setInputValue(e.target.value);\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length >= 2)\n        setCategories(cats=>\n            [inputValue, ...cats]\n        );\n        // console.log(999);\n        // setCategories( cats=> ['otra serie',...catss])\n\n    }\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" value={inputValue} onChange={handleInputText} />\n            </form>\n        </div>\n    )\n}\n\nCategoryAdd.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=4lrQF3ryJ0lyRlm8vKohQ3QvmLbmEK3g&limit=10&q=`;\n    const resp = await fetch(url + category);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n            giphyUrl: img.url\n\n        }\n    });\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url, giphyUrl }) => {\n    console.log('hhhhhhh',title, id, url, giphyUrl);\n    return (\n        <div className=\"col-lg-3 col-md-6 col-sm-12 animate__animated animate__flip\">\n            <div className=\"card card-gif\" >\n                <img src={url} className=\"card-img-top\" alt=\"\" />\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{title}</h5>\n                        {/* <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p> */}\n                        <a href={giphyUrl} className=\"btn btn-primary\">Ver en GYPHY</a>\n                    </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n// import { getGifs } from '../helpers/GetGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n    // const [images, setImages] = useState([]);\n    const { data:images, loading } = useFetchGifs(category);\n    // console.log(loading);\n    // console.log(data);\n    \n\n    return (\n        <div>\n            <h3 className='animate__animated animate__lightSpeedInRight'>{category}</h3>\n            {loading ? <div className=\"loader\">Loading...</div> : ''}\n            <div className=\"row\">\n            {\n                // console.log('asdasdasd',data),\n                images.map(img => (\n                    <GifGridItem key={img.id}  {...img} />\n\n                    \n                ))\n            }\n            </div>\n\n\n\n        </div>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/GetGifs\";\n\nexport const  useFetchGifs = (category) =>{\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n    useEffect(()=>{\n        getGifs(category).then(imgs => {\n            // console.log( ['data', imgs]);\n\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n        })\n    }, [category]);\n    return state;\n}","import React from 'react'\nimport { useState } from 'react'\nimport { CategoryAdd } from './components/CategoryAdd'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifExpertApp = () => {\n    const [categories, setCategories] = useState(['Dragon ball'])\n    // const handleAdd =  () => {\n    //     setCategories( cats=> ['otra serie',...cats])\n    // }\n    return (\n        <div>\n            <h2 className='animate__animated animate__lightSpeedInRight'> GifExpertAppJS </h2>\n            <CategoryAdd setCategories={setCategories} />\n            <hr></hr>\n\n            {\n                categories.map(category => (\n                    <GifGrid category={category} key={category} />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\nimport Bootstrap from 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'animate.css';\n\n// import App from './App';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}